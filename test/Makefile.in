# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ALLEGRO_CFLAGS = @ALLEGRO_CFLAGS@
ALLEGRO_CONFIG = @ALLEGRO_CONFIG@
ALLEGRO_LIBS = @ALLEGRO_LIBS@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EM_BUILD_ROOT = @EM_BUILD_ROOT@
EM_DATADIR = @EM_DATADIR@
EM_HIGHSCORE_DIR = @EM_HIGHSCORE_DIR@
EM_LIBDIR = @EM_LIBDIR@
GL_LIBS = @GL_LIBS@
INCLTDL = @INCLTDL@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBLTDL = @LIBLTDL@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MATHLIB = @MATHLIB@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
STRIP = @STRIP@
VERSION = @VERSION@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
AUTOMAKE_OPTIONS = gnu

testlibdir = $(EM_LIBDIR)
testdatadir = $(pkgdatadir)

noinst_PROGRAMS = scale simple light texture load explode collision signal billboard font thread menu joy sound trans math misc varray unittest

INCLUDES = -I../base -I../addon -I../src @INCLTDL@
LDADD = ../src/libemilia_pin.a ../addon/libemilia_addon.a ../base/libemilia_base.a @LIBLTDL@

testlib_LTLIBRARIES = libModuleTest.la

libModuleTest_la_LDFLAGS = -module
libModuleTest_la_SOURCES = moduletest.cpp

unittest_LDFLAGS = -export-dynamic
load_LDFLAGS = -export-dynamic

billboard_SOURCES = billboard.cpp
collision_SOURCES = collision.cpp
explode_SOURCES = explode.cpp
font_SOURCES = font.cpp
joy_SOURCES = joy.cpp
light_SOURCES = light.cpp
load_SOURCES = load.cpp
math_SOURCES = math.cpp
menu_SOURCES = menu.cpp
misc_SOURCES = misc.cpp
scale_SOURCES = scale.cpp
signal_SOURCES = signal.cpp
simple_SOURCES = simple.cpp
sound_SOURCES = sound.cpp
texture_SOURCES = texture.cpp
thread_SOURCES = thread.cpp
trans_SOURCES = trans.cpp
unittest_SOURCES = unittest.cpp
varray_SOURCES = varray.cpp

EXTRA_DIST = \
module.txt \
script.txt \
token.txt

subdir = test
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/pinconfig.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(testlib_LTLIBRARIES)

libModuleTest_la_LIBADD =
am_libModuleTest_la_OBJECTS = moduletest.lo
libModuleTest_la_OBJECTS = $(am_libModuleTest_la_OBJECTS)
noinst_PROGRAMS = scale$(EXEEXT) simple$(EXEEXT) light$(EXEEXT) \
	texture$(EXEEXT) load$(EXEEXT) explode$(EXEEXT) \
	collision$(EXEEXT) signal$(EXEEXT) billboard$(EXEEXT) \
	font$(EXEEXT) thread$(EXEEXT) menu$(EXEEXT) joy$(EXEEXT) \
	sound$(EXEEXT) trans$(EXEEXT) math$(EXEEXT) misc$(EXEEXT) \
	varray$(EXEEXT) unittest$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_billboard_OBJECTS = billboard.$(OBJEXT)
billboard_OBJECTS = $(am_billboard_OBJECTS)
billboard_LDADD = $(LDADD)
billboard_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
billboard_LDFLAGS =
am_collision_OBJECTS = collision.$(OBJEXT)
collision_OBJECTS = $(am_collision_OBJECTS)
collision_LDADD = $(LDADD)
collision_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
collision_LDFLAGS =
am_explode_OBJECTS = explode.$(OBJEXT)
explode_OBJECTS = $(am_explode_OBJECTS)
explode_LDADD = $(LDADD)
explode_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
explode_LDFLAGS =
am_font_OBJECTS = font.$(OBJEXT)
font_OBJECTS = $(am_font_OBJECTS)
font_LDADD = $(LDADD)
font_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
font_LDFLAGS =
am_joy_OBJECTS = joy.$(OBJEXT)
joy_OBJECTS = $(am_joy_OBJECTS)
joy_LDADD = $(LDADD)
joy_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
joy_LDFLAGS =
am_light_OBJECTS = light.$(OBJEXT)
light_OBJECTS = $(am_light_OBJECTS)
light_LDADD = $(LDADD)
light_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
light_LDFLAGS =
am_load_OBJECTS = load.$(OBJEXT)
load_OBJECTS = $(am_load_OBJECTS)
load_LDADD = $(LDADD)
load_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_math_OBJECTS = math.$(OBJEXT)
math_OBJECTS = $(am_math_OBJECTS)
math_LDADD = $(LDADD)
math_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
math_LDFLAGS =
am_menu_OBJECTS = menu.$(OBJEXT)
menu_OBJECTS = $(am_menu_OBJECTS)
menu_LDADD = $(LDADD)
menu_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
menu_LDFLAGS =
am_misc_OBJECTS = misc.$(OBJEXT)
misc_OBJECTS = $(am_misc_OBJECTS)
misc_LDADD = $(LDADD)
misc_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
misc_LDFLAGS =
am_scale_OBJECTS = scale.$(OBJEXT)
scale_OBJECTS = $(am_scale_OBJECTS)
scale_LDADD = $(LDADD)
scale_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
scale_LDFLAGS =
am_signal_OBJECTS = signal.$(OBJEXT)
signal_OBJECTS = $(am_signal_OBJECTS)
signal_LDADD = $(LDADD)
signal_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
signal_LDFLAGS =
am_simple_OBJECTS = simple.$(OBJEXT)
simple_OBJECTS = $(am_simple_OBJECTS)
simple_LDADD = $(LDADD)
simple_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
simple_LDFLAGS =
am_sound_OBJECTS = sound.$(OBJEXT)
sound_OBJECTS = $(am_sound_OBJECTS)
sound_LDADD = $(LDADD)
sound_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
sound_LDFLAGS =
am_texture_OBJECTS = texture.$(OBJEXT)
texture_OBJECTS = $(am_texture_OBJECTS)
texture_LDADD = $(LDADD)
texture_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
texture_LDFLAGS =
am_thread_OBJECTS = thread.$(OBJEXT)
thread_OBJECTS = $(am_thread_OBJECTS)
thread_LDADD = $(LDADD)
thread_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
thread_LDFLAGS =
am_trans_OBJECTS = trans.$(OBJEXT)
trans_OBJECTS = $(am_trans_OBJECTS)
trans_LDADD = $(LDADD)
trans_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
trans_LDFLAGS =
am_unittest_OBJECTS = unittest.$(OBJEXT)
unittest_OBJECTS = $(am_unittest_OBJECTS)
unittest_LDADD = $(LDADD)
unittest_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_varray_OBJECTS = varray.$(OBJEXT)
varray_OBJECTS = $(am_varray_OBJECTS)
varray_LDADD = $(LDADD)
varray_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
varray_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/billboard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collision.Po ./$(DEPDIR)/explode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/font.Po ./$(DEPDIR)/joy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/light.Po ./$(DEPDIR)/load.Po \
@AMDEP_TRUE@	./$(DEPDIR)/math.Po ./$(DEPDIR)/menu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/misc.Po ./$(DEPDIR)/moduletest.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/scale.Po ./$(DEPDIR)/signal.Po \
@AMDEP_TRUE@	./$(DEPDIR)/simple.Po ./$(DEPDIR)/sound.Po \
@AMDEP_TRUE@	./$(DEPDIR)/texture.Po ./$(DEPDIR)/thread.Po \
@AMDEP_TRUE@	./$(DEPDIR)/trans.Po ./$(DEPDIR)/unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/varray.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libModuleTest_la_SOURCES) $(billboard_SOURCES) \
	$(collision_SOURCES) $(explode_SOURCES) $(font_SOURCES) \
	$(joy_SOURCES) $(light_SOURCES) $(load_SOURCES) $(math_SOURCES) \
	$(menu_SOURCES) $(misc_SOURCES) $(scale_SOURCES) \
	$(signal_SOURCES) $(simple_SOURCES) $(sound_SOURCES) \
	$(texture_SOURCES) $(thread_SOURCES) $(trans_SOURCES) \
	$(unittest_SOURCES) $(varray_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libModuleTest_la_SOURCES) $(billboard_SOURCES) $(collision_SOURCES) $(explode_SOURCES) $(font_SOURCES) $(joy_SOURCES) $(light_SOURCES) $(load_SOURCES) $(math_SOURCES) $(menu_SOURCES) $(misc_SOURCES) $(scale_SOURCES) $(signal_SOURCES) $(simple_SOURCES) $(sound_SOURCES) $(texture_SOURCES) $(thread_SOURCES) $(trans_SOURCES) $(unittest_SOURCES) $(varray_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
testlibLTLIBRARIES_INSTALL = $(INSTALL)
install-testlibLTLIBRARIES: $(testlib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(testlibdir)
	@list='$(testlib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(testlibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(testlibdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(testlibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(testlibdir)/$$f; \
	  else :; fi; \
	done

uninstall-testlibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(testlib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(testlibdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(testlibdir)/$$p; \
	done

clean-testlibLTLIBRARIES:
	-test -z "$(testlib_LTLIBRARIES)" || rm -f $(testlib_LTLIBRARIES)
	@list='$(testlib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libModuleTest.la: $(libModuleTest_la_OBJECTS) $(libModuleTest_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(testlibdir) $(libModuleTest_la_LDFLAGS) $(libModuleTest_la_OBJECTS) $(libModuleTest_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
billboard$(EXEEXT): $(billboard_OBJECTS) $(billboard_DEPENDENCIES) 
	@rm -f billboard$(EXEEXT)
	$(CXXLINK) $(billboard_LDFLAGS) $(billboard_OBJECTS) $(billboard_LDADD) $(LIBS)
collision$(EXEEXT): $(collision_OBJECTS) $(collision_DEPENDENCIES) 
	@rm -f collision$(EXEEXT)
	$(CXXLINK) $(collision_LDFLAGS) $(collision_OBJECTS) $(collision_LDADD) $(LIBS)
explode$(EXEEXT): $(explode_OBJECTS) $(explode_DEPENDENCIES) 
	@rm -f explode$(EXEEXT)
	$(CXXLINK) $(explode_LDFLAGS) $(explode_OBJECTS) $(explode_LDADD) $(LIBS)
font$(EXEEXT): $(font_OBJECTS) $(font_DEPENDENCIES) 
	@rm -f font$(EXEEXT)
	$(CXXLINK) $(font_LDFLAGS) $(font_OBJECTS) $(font_LDADD) $(LIBS)
joy$(EXEEXT): $(joy_OBJECTS) $(joy_DEPENDENCIES) 
	@rm -f joy$(EXEEXT)
	$(CXXLINK) $(joy_LDFLAGS) $(joy_OBJECTS) $(joy_LDADD) $(LIBS)
light$(EXEEXT): $(light_OBJECTS) $(light_DEPENDENCIES) 
	@rm -f light$(EXEEXT)
	$(CXXLINK) $(light_LDFLAGS) $(light_OBJECTS) $(light_LDADD) $(LIBS)
load$(EXEEXT): $(load_OBJECTS) $(load_DEPENDENCIES) 
	@rm -f load$(EXEEXT)
	$(CXXLINK) $(load_LDFLAGS) $(load_OBJECTS) $(load_LDADD) $(LIBS)
math$(EXEEXT): $(math_OBJECTS) $(math_DEPENDENCIES) 
	@rm -f math$(EXEEXT)
	$(CXXLINK) $(math_LDFLAGS) $(math_OBJECTS) $(math_LDADD) $(LIBS)
menu$(EXEEXT): $(menu_OBJECTS) $(menu_DEPENDENCIES) 
	@rm -f menu$(EXEEXT)
	$(CXXLINK) $(menu_LDFLAGS) $(menu_OBJECTS) $(menu_LDADD) $(LIBS)
misc$(EXEEXT): $(misc_OBJECTS) $(misc_DEPENDENCIES) 
	@rm -f misc$(EXEEXT)
	$(CXXLINK) $(misc_LDFLAGS) $(misc_OBJECTS) $(misc_LDADD) $(LIBS)
scale$(EXEEXT): $(scale_OBJECTS) $(scale_DEPENDENCIES) 
	@rm -f scale$(EXEEXT)
	$(CXXLINK) $(scale_LDFLAGS) $(scale_OBJECTS) $(scale_LDADD) $(LIBS)
signal$(EXEEXT): $(signal_OBJECTS) $(signal_DEPENDENCIES) 
	@rm -f signal$(EXEEXT)
	$(CXXLINK) $(signal_LDFLAGS) $(signal_OBJECTS) $(signal_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(CXXLINK) $(simple_LDFLAGS) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
sound$(EXEEXT): $(sound_OBJECTS) $(sound_DEPENDENCIES) 
	@rm -f sound$(EXEEXT)
	$(CXXLINK) $(sound_LDFLAGS) $(sound_OBJECTS) $(sound_LDADD) $(LIBS)
texture$(EXEEXT): $(texture_OBJECTS) $(texture_DEPENDENCIES) 
	@rm -f texture$(EXEEXT)
	$(CXXLINK) $(texture_LDFLAGS) $(texture_OBJECTS) $(texture_LDADD) $(LIBS)
thread$(EXEEXT): $(thread_OBJECTS) $(thread_DEPENDENCIES) 
	@rm -f thread$(EXEEXT)
	$(CXXLINK) $(thread_LDFLAGS) $(thread_OBJECTS) $(thread_LDADD) $(LIBS)
trans$(EXEEXT): $(trans_OBJECTS) $(trans_DEPENDENCIES) 
	@rm -f trans$(EXEEXT)
	$(CXXLINK) $(trans_LDFLAGS) $(trans_OBJECTS) $(trans_LDADD) $(LIBS)
unittest$(EXEEXT): $(unittest_OBJECTS) $(unittest_DEPENDENCIES) 
	@rm -f unittest$(EXEEXT)
	$(CXXLINK) $(unittest_LDFLAGS) $(unittest_OBJECTS) $(unittest_LDADD) $(LIBS)
varray$(EXEEXT): $(varray_OBJECTS) $(varray_DEPENDENCIES) 
	@rm -f varray$(EXEEXT)
	$(CXXLINK) $(varray_LDFLAGS) $(varray_OBJECTS) $(varray_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/billboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collision.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/explode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/joy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/light.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/math.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/moduletest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trans.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/varray.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(testlibdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	clean-testlibLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-testlibLTLIBRARIES

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-testlibLTLIBRARIES

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS clean-testlibLTLIBRARIES \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip install-testlibLTLIBRARIES \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am uninstall-testlibLTLIBRARIES

dnl noinst_PROGRAMS = unittest
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
